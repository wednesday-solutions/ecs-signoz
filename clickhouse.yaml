AWSTemplateFormatVersion: '2010-09-09'
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    # Notice how you can't attach an IGW to a VPC unless both are created:
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.10.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list
      MapPublicIpOnLaunch: true       
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A 
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.20.0/24
      AvailabilityZone: !Select [ 1, !GetAZs ]    # Get the second AZ in the list 
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-B
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.50.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list 
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-A
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.60.0/24
      AvailabilityZone: !Select [ 1, !GetAZs ]    # Get the second AZ in the list 
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-B      
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
  PublicRoute1:   # Public route table has direct routing to IGW:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
     AllocationId: !GetAtt ElasticIPAddress.AllocationId
     SubnetId: !Ref PublicSubnetA
     Tags:
     - Key: Name
       Value: !Sub NAT-${AWS::StackName}
  ElasticIPAddress:
   Type: AWS::EC2::EIP
   Properties:
     Domain: VPC
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private
  PrivateRoute1:            # Private route table can access web via NAT (created below)
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      # Route traffic through the NAT Gateway:
      NatGatewayId: !Ref NATGateway
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9000'
          ToPort: '9000'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9009'
          ToPort: '9009'
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VPC
  ClickhouseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9000'
          ToPort: '9000'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VPC    
  ZookeeperSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '2181'
          ToPort: '2181'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '2888'
          ToPort: '2888'
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: '3888'
          ToPort: '3888'
          CidrIp: 0.0.0.0/0    
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VPC    
  EC2Instance1: 
    Type: AWS::EC2::Instance
    DependsOn: Ec2NetworkInterface1
    Properties:
      ImageId: ami-0fc5e138c75e0c123
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/server-1-ip/0.0.0.0/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-2-ip/${server_2}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-3-ip/${server_3}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo ZK_SERVER_HEAP=128 /usr/local/zookeeper/bin/zkServer.sh start
          - server_2: !GetAtt Ec2NetworkInterface2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterface3.PrimaryPrivateIpAddress
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterface1
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
         
    
      Tags:
       - Key: Name
         Value: zookeeper-1
  Ec2NetworkInterface1:
    DependsOn: Ec2NetworkInterface2
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PublicSubnetA
      GroupSet: 
        - !Ref ZookeeperSecurityGroup

  Ec2NetworkInterface2:
    Type: AWS::EC2::NetworkInterface
    DependsOn: Ec2NetworkInterface3
    Properties:
      SubnetId: !Ref PublicSubnetB
      GroupSet: 
        - !Ref ZookeeperSecurityGroup
  Ec2NetworkInterface3:

    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PublicSubnetA
      GroupSet: 
        - !Ref ZookeeperSecurityGroup
  EC2Instance2: 
    Type: AWS::EC2::Instance
    DependsOn: Ec2NetworkInterface2
    Properties:
      ImageId: ami-0fc5e138c75e0c123
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/server-1-ip/${server_1}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-2-ip/0.0.0.0/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-3-ip/${server_3}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/1/2/" /var/lib/zookeeper/myid
            sudo ZK_SERVER_HEAP=128 /usr/local/zookeeper/bin/zkServer.sh start
          - server_1: !GetAtt Ec2NetworkInterface1.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterface3.PrimaryPrivateIpAddress
            
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterface2
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true  
         
          
      Tags:
       - Key: Name
         Value: zookeeper-2                           
  EC2Instance3: 
    Type: AWS::EC2::Instance
    DependsOn: Ec2NetworkInterface3
    Properties:
      ImageId: ami-0fc5e138c75e0c123
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/server-1-ip/${server_1}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-2-ip/${server_2}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-3-ip/0.0.0.0/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/1/3/" /var/lib/zookeeper/myid
            sudo ZK_SERVER_HEAP=128 /usr/local/zookeeper/bin/zkServer.sh start
          - server_2: !GetAtt Ec2NetworkInterface2.PrimaryPrivateIpAddress
            server_1: !GetAtt Ec2NetworkInterface1.PrimaryPrivateIpAddress
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterface3
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: zookeeper-3
  Ec2NetworkInterfaceClickhouse1:
    DependsOn: EC2Instance1
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PublicSubnetA
      GroupSet: 
        - !Ref ClickhouseSecurityGroup
  EC2InstanceClickhouse1: 
    Type: AWS::EC2::Instance
    DependsOn: Ec2NetworkInterfaceClickhouse6
    Properties:
      ImageId: ami-0277fcc4b53914d4a
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-1-replica-2/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-2/${server_4}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_5}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-2/${server_6}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            server_4: !GetAtt Ec2NetworkInterfaceClickhouse4.PrimaryPrivateIpAddress
            server_5: !GetAtt Ec2NetworkInterfaceClickhouse5.PrimaryPrivateIpAddress
            server_6: !GetAtt Ec2NetworkInterfaceClickhouse6.PrimaryPrivateIpAddress
            z_1: !GetAtt EC2Instance1.PrivateDnsName
            z_2: !GetAtt EC2Instance2.PrivateDnsName
            z_3: !GetAtt EC2Instance3.PrivateDnsName
            s_num: 1
            r_num: 1


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse1
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: clickhouse-1      

  Ec2NetworkInterfaceClickhouse2:
    DependsOn: Ec2NetworkInterfaceClickhouse1
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetB
      GroupSet: 
        - !Ref ClickhouseSecurityGroup
  EC2InstanceClickhouse2: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse1
    Properties:
      ImageId: ami-0277fcc4b53914d4a
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-1-replica-2/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-2/${server_4}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_5}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-2/${server_6}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            server_4: !GetAtt Ec2NetworkInterfaceClickhouse4.PrimaryPrivateIpAddress
            server_5: !GetAtt Ec2NetworkInterfaceClickhouse5.PrimaryPrivateIpAddress
            server_6: !GetAtt Ec2NetworkInterfaceClickhouse6.PrimaryPrivateIpAddress
            z_1: !GetAtt EC2Instance1.PrivateDnsName
            z_2: !GetAtt EC2Instance2.PrivateDnsName
            z_3: !GetAtt EC2Instance3.PrivateDnsName
            s_num: 1
            r_num: 2


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse2
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: clickhouse-2     
  EC2InstanceClickhouse3: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse2
    Properties:
      ImageId: ami-0277fcc4b53914d4a
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-1-replica-2/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-2/${server_4}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_5}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-2/${server_6}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            server_4: !GetAtt Ec2NetworkInterfaceClickhouse4.PrimaryPrivateIpAddress
            server_5: !GetAtt Ec2NetworkInterfaceClickhouse5.PrimaryPrivateIpAddress
            server_6: !GetAtt Ec2NetworkInterfaceClickhouse6.PrimaryPrivateIpAddress
            z_1: !GetAtt EC2Instance1.PrivateDnsName
            z_2: !GetAtt EC2Instance2.PrivateDnsName
            z_3: !GetAtt EC2Instance3.PrivateDnsName
            s_num: 2
            r_num: 1


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse3
          DeviceIndex: "0"
      Tags:
       - Key: Name
         Value: clickhouse-3          

  Ec2NetworkInterfaceClickhouse3:
    DependsOn: Ec2NetworkInterfaceClickhouse2
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetA
      GroupSet: 
        - !Ref ClickhouseSecurityGroup


  Ec2NetworkInterfaceClickhouse4:
    DependsOn: Ec2NetworkInterfaceClickhouse3
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetB
      GroupSet: 
        - !Ref ClickhouseSecurityGroup
  EC2InstanceClickhouse4: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse3
    Properties:
      ImageId: ami-0277fcc4b53914d4a
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-1-replica-2/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-2/${server_4}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_5}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-2/${server_6}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            server_4: !GetAtt Ec2NetworkInterfaceClickhouse4.PrimaryPrivateIpAddress
            server_5: !GetAtt Ec2NetworkInterfaceClickhouse5.PrimaryPrivateIpAddress
            server_6: !GetAtt Ec2NetworkInterfaceClickhouse6.PrimaryPrivateIpAddress
            z_1: !GetAtt EC2Instance1.PrivateDnsName
            z_2: !GetAtt EC2Instance2.PrivateDnsName
            z_3: !GetAtt EC2Instance3.PrivateDnsName
            s_num: 2
            r_num: 2


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse4
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: clickhouse-4             
  Ec2NetworkInterfaceClickhouse5:
    DependsOn: Ec2NetworkInterfaceClickhouse4
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetA
      GroupSet: 
        - !Ref ClickhouseSecurityGroup
  EC2InstanceClickhouse5: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse4
    Properties:
      ImageId: ami-0277fcc4b53914d4a
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-1-replica-2/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-2/${server_4}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_5}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-2/${server_6}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            server_4: !GetAtt Ec2NetworkInterfaceClickhouse4.PrimaryPrivateIpAddress
            server_5: !GetAtt Ec2NetworkInterfaceClickhouse5.PrimaryPrivateIpAddress
            server_6: !GetAtt Ec2NetworkInterfaceClickhouse6.PrimaryPrivateIpAddress
            z_1: !GetAtt EC2Instance1.PrivateDnsName
            z_2: !GetAtt EC2Instance2.PrivateDnsName
            z_3: !GetAtt EC2Instance3.PrivateDnsName
            s_num: 3
            r_num: 1


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse5
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: clickhouse-5           
        
  Ec2NetworkInterfaceClickhouse6:
    DependsOn: Ec2NetworkInterfaceClickhouse5
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetB
      GroupSet: 
        - !Ref ClickhouseSecurityGroup   
  EC2InstanceClickhouse6: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse5
    Properties:
      ImageId: ami-0277fcc4b53914d4a
      InstanceType: t2.small
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-1-replica-2/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-2/${server_4}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_5}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-2/${server_6}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            server_4: !GetAtt Ec2NetworkInterfaceClickhouse4.PrimaryPrivateIpAddress
            server_5: !GetAtt Ec2NetworkInterfaceClickhouse5.PrimaryPrivateIpAddress
            server_6: !GetAtt Ec2NetworkInterfaceClickhouse6.PrimaryPrivateIpAddress
            z_1: !GetAtt EC2Instance1.PrivateDnsName
            z_2: !GetAtt EC2Instance2.PrivateDnsName
            z_3: !GetAtt EC2Instance3.PrivateDnsName
            s_num: 3
            r_num: 2

      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse6
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: clickhouse-6                


Outputs:
  VpcId:
    Description: Id of the vpc created by cloudformation
    Value: !GetAtt VPC.VpcId
  PublicDns:
    Description: public dns of the ec2 instance
    Value:  !GetAtt EC2Instance1.PublicDnsName   

