AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: Exiting vpc you are going to use
  PublicSubnetAId:   
    Type: "AWS::EC2::Subnet::Id"
    Description: id of existing public subnet 1
  PublicSubnetBId:   
    Type: "AWS::EC2::Subnet::Id"
    Description: id of existing public subnet 2
  PrivateSubnetAId:   
    Type: "AWS::EC2::Subnet::Id"
    Description: id of existing private subnet 1
  PrivateSubnetBId:   
    Type: "AWS::EC2::Subnet::Id"
    Description: id of existing private subnet 1    
  ZookeeperInstanceType:
    Type: String
    Default: t2.small
    Description: intance type of your zookeeper node
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
 
  RootVolumeSize:
    Type: Number
    Default: "100"
    Description: Root Volume size for your clickhouse instances

  ClickhouseInstanceType:
    Type:  String
    Default: t2.small
    Description: intance type of your zookeeper node
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge



Mappings:
  RegionMap:
    ap-south-1:
      zami: ami-0809f544f4823a3a0
      cami: ami-0d12b9139d3490271
    eu-north-1:
      zami: ami-09fc4efac65948697
      cami: ami-04ebc80fe24e85734
    eu-west-3:
      zami: ami-03ca5c2aa466c383c
      cami: ami-00a05cd5851918906
    eu-west-2:
      zami: ami-04bd48d131d3f2539
      cami: ami-0785957fddcc0d2aa
    eu-west-1:
      zami: ami-05262f77f4a58627b
      cami: ami-091111613f8008808
    ap-northeast-3:
      zami: ami-062b1b56757905e68
      cami: ami-0e4b2c29fe8159a81
    ap-northeast-2:
      zami: ami-0afe4e17974ec8899
      cami: ami-02d3409151147f9c5
    ap-northeast-1:
      zami: ami-0feb004f34fbeb54b
      cami: ami-0f9b54ee6703ca6ce
    ca-central-1:
      zami: ami-08b099378355c22e3
      cami: ami-07491d6fa2a0be77b
    sa-east-1:
      zami: ami-0ff03ff99bb749a43
      cami: ami-044e5376596be446a
    ap-southeast-1:
      zami: ami-01f3d80c3cb33ce1f
      cami: ami-00e5a7d31928e4c50
    ap-southeast-2:
      zami: ami-0bf48169eb245e48b
      cami: ami-0009d5237bf2761d5
    eu-central-1:
      zami: ami-0a560a935e9c50540
      cami: ami-05bfa434ebc0e3d64
    us-east-1:
      zami: ami-0ecb3ad5c6fa31e13
      cami: ami-0d38a7a8a915f695e
    us-east-2:
      zami: ami-0573190c8d06c5e52
      cami: ami-0fdfa72a5786c34b0
    us-west-1:
      zami: ami-0026a926c44ea96be
      cami: ami-03dcc7f50fa64ec73
    us-west-2:
      zami: ami-07f65c3bfa8f128d0
      cami: ami-0e51d01a6edba187e






Resources:
  NewKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Join ['-', ['ClickhouseKeyPairName', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  BastionHostSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH from 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VpcId
  ClickhouseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9000'
          ToPort: '9000'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VpcId
  ZookeeperSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '2181'
          ToPort: '2181'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '2888'
          ToPort: '2888'
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: '3888'
          ToPort: '3888'
          CidrIp: 0.0.0.0/0    
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VpcId
  
  ZookeeperNetworkInterface1:
    DependsOn: ZookeeperNetworkInterface2
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetAId
      GroupSet: 
        - !Ref ZookeeperSecurityGroup       
  ZookeeperEc2Instance1: 
    Type: AWS::EC2::Instance
    DependsOn: ZookeeperNetworkInterface1
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", "zami"]
      KeyName: !Ref NewKeyPair
      InstanceType: !Ref ZookeeperInstanceType
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/server-1-ip/0.0.0.0/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-2-ip/${server_2}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-3-ip/${server_3}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo ZK_SERVER_HEAP=128 /usr/local/zookeeper/bin/zkServer.sh start
          - server_2: !GetAtt ZookeeperNetworkInterface2.PrimaryPrivateIpAddress
            server_3: !GetAtt ZookeeperNetworkInterface3.PrimaryPrivateIpAddress
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref ZookeeperNetworkInterface1
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: true
            Encrypted: true    
         
    
      Tags:
       - Key: Name
         Value: signoz-zookeeper-1
  

  ZookeeperNetworkInterface2:
    Type: AWS::EC2::NetworkInterface
    DependsOn: ZookeeperNetworkInterface3
    Properties:
      SubnetId: !Ref PrivateSubnetBId
      GroupSet: 
        - !Ref ZookeeperSecurityGroup
  
  ZookeeperEc2Instance2: 
    Type: AWS::EC2::Instance
    DependsOn: ZookeeperNetworkInterface2
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", "zami"]
      KeyName: !Ref NewKeyPair
      InstanceType: !Ref ZookeeperInstanceType
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/server-1-ip/${server_1}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-2-ip/0.0.0.0/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-3-ip/${server_3}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/1/2/" /var/lib/zookeeper/myid
            sudo ZK_SERVER_HEAP=128 /usr/local/zookeeper/bin/zkServer.sh start
          - server_1: !GetAtt ZookeeperNetworkInterface1.PrimaryPrivateIpAddress
            server_3: !GetAtt ZookeeperNetworkInterface3.PrimaryPrivateIpAddress
            
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref ZookeeperNetworkInterface2
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: true
            Encrypted: true  
         
          
      Tags:
       - Key: Name
         Value: signoz-zookeeper-2                           
  ZookeeperNetworkInterface3:

    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetAId
      GroupSet: 
        - !Ref ZookeeperSecurityGroup
  
  
  ZookeeperEc2Instance3: 
    Type: AWS::EC2::Instance
    DependsOn: ZookeeperNetworkInterface3
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", "zami"]
      KeyName: !Ref NewKeyPair
      InstanceType: !Ref ZookeeperInstanceType
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/server-1-ip/${server_1}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-2-ip/${server_2}/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/server-3-ip/0.0.0.0/" /usr/local/zookeeper/conf/zoo.cfg
            sudo sed -i -r "s/1/3/" /var/lib/zookeeper/myid
            sudo ZK_SERVER_HEAP=128 /usr/local/zookeeper/bin/zkServer.sh start
          - server_2: !GetAtt ZookeeperNetworkInterface2.PrimaryPrivateIpAddress
            server_1: !GetAtt ZookeeperNetworkInterface1.PrimaryPrivateIpAddress
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref ZookeeperNetworkInterface3
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: true
            Encrypted: true          
      Tags:
       - Key: Name
         Value: signoz-zookeeper-3
  Ec2NetworkInterfaceClickhouse1:
    DependsOn: ZookeeperEc2Instance1
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetAId
      GroupSet: 
        - !Ref ClickhouseSecurityGroup
  EC2InstanceClickhouse1: 
    Type: AWS::EC2::Instance
    DependsOn: Ec2NetworkInterfaceClickhouse1
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", "cami"]
      KeyName: !Ref NewKeyPair
      InstanceType:  !Ref ClickhouseInstanceType
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            z_1: !GetAtt ZookeeperEc2Instance1.PrivateDnsName
            z_2: !GetAtt ZookeeperEc2Instance2.PrivateDnsName
            z_3: !GetAtt ZookeeperEc2Instance3.PrivateDnsName
            s_num: 1
            r_num: 1


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse1
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: signoz-clickhouse-1      

  Ec2NetworkInterfaceClickhouse2:
    DependsOn: Ec2NetworkInterfaceClickhouse1
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetBId
      GroupSet: 
        - !Ref ClickhouseSecurityGroup
  EC2InstanceClickhouse2: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse1
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", "cami"]
      KeyName: !Ref NewKeyPair
      InstanceType: !Ref ClickhouseInstanceType
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            z_1: !GetAtt ZookeeperEc2Instance1.PrivateDnsName
            z_2: !GetAtt ZookeeperEc2Instance2.PrivateDnsName
            z_3: !GetAtt ZookeeperEc2Instance3.PrivateDnsName
            s_num: 2
            r_num: 1


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse2
          DeviceIndex: "0"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: true
            Encrypted: true    
      Tags:
       - Key: Name
         Value: signoz-clickhouse-2   
  Ec2NetworkInterfaceClickhouse3:
    DependsOn: Ec2NetworkInterfaceClickhouse2
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref PrivateSubnetAId
      GroupSet: 
        - !Ref ClickhouseSecurityGroup         
  EC2InstanceClickhouse3: 
    Type: AWS::EC2::Instance
    DependsOn: EC2InstanceClickhouse2
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", "cami"]
      KeyName: !Ref NewKeyPair
      InstanceType: !Ref ClickhouseInstanceType
      UserData:
        Fn::Base64 : !Sub 
          - |
            #!/bin/bash -xe
            echo "hello-world"
            sudo sed -i -r "s/shard-1-replica-1/${server_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-2-replica-1/${server_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-3-replica-1/${server_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-1-host/${z_1}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-2-host/${z_2}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/zookeeper-3-host/${z_3}/" /etc/clickhouse-server/config.d/cluster.xml
            sudo sed -i -r "s/shard-num/${s_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo sed -i -r "s/replica-num/${r_num}/" /etc/clickhouse-server/config.d/macros.xml
            sudo systemctl restart clickhouse-server
          - server_1: !GetAtt Ec2NetworkInterfaceClickhouse1.PrimaryPrivateIpAddress
            server_2: !GetAtt Ec2NetworkInterfaceClickhouse2.PrimaryPrivateIpAddress
            server_3: !GetAtt Ec2NetworkInterfaceClickhouse3.PrimaryPrivateIpAddress
            z_1: !GetAtt ZookeeperEc2Instance1.PrivateDnsName
            z_2: !GetAtt ZookeeperEc2Instance2.PrivateDnsName
            z_3: !GetAtt ZookeeperEc2Instance3.PrivateDnsName
            s_num: 3
            r_num: 1
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: true
            Encrypted: true          


      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref Ec2NetworkInterfaceClickhouse3
          DeviceIndex: "0"
      Tags:
       - Key: Name
         Value: signoz-clickhouse-3          

  

Outputs:
  VpcId:
    Description: Id of the vpc created by cloudformation
    Value: !Ref VpcId
  ClickhouseDnsHost:
    Description: public dns of the ec2 instance
    Value:  !GetAtt EC2InstanceClickhouse3.PrivateDnsName
  PublicSubNetAId:
    Description: Id of public subnet A
    Value: !Ref PublicSubnetAId
  PublicSubNetBId:
    Description: Id of public subnet b
    Value: !Ref PublicSubnetBId
  PrivateSubNetAId:
    Description: Id of private subnet A
    Value: !Ref PrivateSubnetAId
  PrivateSubNetBId:
    Description: Id of public subnet A
    Value: !Ref PrivateSubnetAId

